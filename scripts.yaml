## This file cannot move from the HASS root folder.

###############################################
############## Connection / Data
###############################################

'update_temperature_sheet':
  alias: Update Temperature to Google Sheets
  sequence:
  - service: ifttt.trigger
    data_template: {"event":"Temperature","value1":"{{states.input_number.temperature_downstairs.state}}","value2":"{{states.input_number.temperature_upstairs.state}}","value3":"{{states.input_number.temperature_outside.state}}"}
'update_climate_sheet':
  alias: Update Climate to Google Sheets
  sequence:
  - service: ifttt.trigger
    data_template: {"event":"Climate","value1":"{{states.input_number.temperature_house.state}}","value2":"{{states.input_number.temperature_outside.state}}","value3":"{{states.input_boolean.outside_cooler.state}}"}
'update_all_temp_sheet':
  alias: Update All Temps to Sheets
  sequence:
  - service: ifttt.trigger
    data_template: {"event":"Climate","value1":"{{states.input_number.temperature_house.state}}","value2":"{{states.input_number.temperature_outside.state}}","value3":"{{states.input_boolean.outside_cooler.state}}"}
  - service: ifttt.trigger
    data_template: {"event":"Temperature","value1":"{{states.input_number.temperature_downstairs.state}}","value2":"{{states.input_number.temperature_upstairs.state}}","value3":"{{states.input_number.temperature_outside.state}}"}

    
###############################################
############## Front Lights
###############################################

'holiday':
  alias: Check Holiday
  sequence:
    - service: input_select.select_option
      entity_id: input_select.holiday
      data_template:
        option: >
          {% if (now().month==2 and now().day<=14)%} Valentine's Day
          {% elif (now().month==3 and now().day>=7 and now().day<=17)%} St. Patrick's Day
          {% elif (now().month==7 and now().day<=4)%} Independence Day
          {% elif (now().month==10)%} Halloween
          {% elif (now().month==11 and now().day<=26)%} Thanksgiving
          {% elif ((now().month==11 and now().day>26) or (now().month==12 and now().day<=25))%} Christmas
          {% else%} None
          {% endif %}

'front_lights':
  alias: Front Lights
  sequence:
    - service: scene.turn_on
      data_template:
        entity_id: >
          {% if (states.input_select.holiday.state == "None")%} scene.frontlights_normal
          {% elif (states.input_select.holiday.state == "Valentine's Day")%} scene.frontlights_valentines
          {% elif (states.input_select.holiday.state == "St. Patrick's Day")%} scene.frontlights_stpattys
          {% elif (states.input_select.holiday.state == "Independence Day")%} scene.frontlights_july4th
          {% elif (states.input_select.holiday.state == "Halloween")%} scene.frontlights_halloween
          {% elif (states.input_select.holiday.state == "Thanksgiving")%} scene.frontlights_thanksgiving
          {% elif (states.input_select.holiday.state == "Christmas")%} scene.frontlights_christmas
          {% else%} scene.frontlights_normal
          {% endif %}

###############################################
############## Living Room Lights
###############################################

'night_tv_mode':
  alias: Night TV Mode
  sequence:
    - service: scene.turn_on
      entity_id:
        - scene.night_tv_mode
        
        
###############################################
############## Bedroom Lights
###############################################

'reminder_garbage':
  alias: Garbage Reminder
  sequence:
    - service: input_select.select_option
      entity_id: input_select.garbage_week
      data_template:
        option: >
          {% if (states.input_select.garbage_week.state == "Both")%} Garbage
          {% else%} Both
          {% endif %}
    - service: scene.turn_on
      data_template:
        entity_id: >
          {% if (states.input_select.garbage_week.state == "Garbage")%} scene.garbage_garbage
          {% else%} scene.garbage_both
          {% endif %}
    - service: notify.telegram
      data:
        message: "
        {% if is_state('input_select.garbage_week', 'Garbage') %}It's time to take out the garbage.
        {% else %}It's time to take out the Garbage and Recycle.
        {% endif %}"

###############################################
############## Bedroom Lights
###############################################

'arrival_notify':
  alias: "Arrival Notification"
  sequence:
  - service: sonos.snapshot
    entity_id: media_player.living_room
  - service: tts.google_translate_say
    entity_id: media_player.living_room
    data:
      message: 'Motion Detected on Front Porch'
  - delay: '0:00:02'
  - service: sonos.restore
    entity_id: media_player.living_room
      
'morning_update_notify':
  alias: "Good Morning"
  sequence:
  - service: sonos.snapshot
    entity_id: media_player.living_room
  - service: tts.google_translate_say
    entity_id: media_player.living_room
    data:
      message: 'Good Morning!'
  - delay: '0:00:01'
  - service: sonos.restore
    entity_id: media_player.living_room
    
'request_update_notify':
  alias: "Requested Update"
  sequence:
  - service: sonos.snapshot
    entity_id: media_player.living_room
    
  - service: tts.google_translate_say
    entity_id: media_player.living_room
    data_template:
      message: "Hello, presently the average house temperature is {{ states('input_number.temperature_house') }}Â°F"
      
  - delay: '0:00:06'
  - service: sonos.restore
    entity_id: media_player.living_room